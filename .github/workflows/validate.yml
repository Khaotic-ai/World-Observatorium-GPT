name: Validate Observatorium Stack

on:
  push:
    branches: [ feat/phase-3-2, main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      # Secrets are injected here; the script will read them as normal env vars.
      NASA_API_KEY: ${{ secrets.NASA_API_KEY }}
      IQAIR_KEY:    ${{ secrets.IQAIR_KEY }}          # <-- FIXED: corrected spelling
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SWPC_BASE: https://services.swpc.noaa.gov

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          # If you have a test requirements file, include it:
          if [ -f requirements_test.txt ]; then pip install -r requirements_test.txt; fi

      - name: Verify required env present
        run: |
          missing=0
          [ -n "$NASA_API_KEY" ]   || { echo "Missing NASA_API_KEY";   missing=1; }
          [ -n "$IQAIR_KEY" ]      || { echo "Missing IQAIR_KEY";      missing=1; }
          [ -n "$OPENAI_API_KEY" ] || { echo "Missing OPENAI_API_KEY"; missing=1; }
          exit $missing

      # Optional: create a test .env used by your app/tests
      - name: Create test .env
        run: |
          cat > .env <<'EOF'
          APP_ENV=test
          UVICORN_HOST=127.0.0.1
          UVICORN_PORT=8000
          LOG_LEVEL=INFO
          SWPC_BASE=${SWPC_BASE}
          # Pass secrets into app via env (already exported above)
          # NASA_API_KEY, IQAIR_KEY, OPENAI_API_KEY will be read from env
          EOF

      # If you need to boot the API for health checks:
      - name: Launch API (background)
        run: |
          python -m uvicorn orchestrator.app:app --host 127.0.0.1 --port 8000 &
          echo $! > uvicorn.pid
          sleep 5
          curl -fsSL "http://127.0.0.1:8000/time/utc" | head -c 200

      - name: API health check
        run: |
          set -e
          curl -fsSL "http://127.0.0.1:8000/solarwind/rt?hours=1" | head -c 300
          curl -fsSL "http://127.0.0.1:8000/coherence/eta?lat=-25.95&lon=152.62&hours=1" | head -c 300

      - name: Run tests
        run: |
          if [ -d tests ]; then pytest -q tests; fi

      - name: Stop API
        if: always()
        run: |
          if [ -f uvicorn.pid ]; then kill $(cat uvicorn.pid) || true; fi
